stages:
  hmmbuild:
    cmd: hmmbuild ${hmmbuild_options} ./intermediates/characterized.hmm ${input_alignment}
    deps: 
      - ${input_alignment}
    params: 
      - hmmbuild_options
      - input_alignment
    outs: 
      - ./intermediates/characterized.hmm

  hmmsearch:
    foreach: ${target_dbs.target_dbs}
    do:
      cmd: >
        ./scripts/hmmsearch.sh 
        ./intermediates/characterized.hmm 
        ./intermediates/hmmsearch_output_${item} 
        ${db_location}/${item}
        ${hmmsearch_evalue}
      deps: 
        - ./intermediates/characterized.hmm
        - ./scripts/hmmsearch.sh
      params: 
        - hmmsearch_evalue
        - db_location
      outs:
        - ./intermediates/hmmsearch_output_${item}.tbl
        - ./intermediates/hmmsearch_output_${item}.domtbl
        - ./intermediates/hmmsearch_output_${item}.out

  remove_hits_starting_sequences:
    foreach: ${target_dbs.target_dbs}
    do:
      cmd: >
        python ./scripts/remove_hits_starting_sequences.py 
        ./intermediates/hmmsearch_output_${item}.out 
        ${input_alignment} 
        ./intermediates/removed_starting_hits_${item}.txt
      deps:
        - ./intermediates/hmmsearch_output_${item}.out
        - ${input_alignment}
        - ./scripts/remove_hits_starting_sequences.py
      params: 
        - input_alignment
      outs: 
        - ./intermediates/removed_starting_hits_${item}.txt

  remove_poor_coverage:
    foreach: ${target_dbs.target_dbs}
    do:
      cmd: >
        python ./scripts/remove_poor_coverage.py 
        ./intermediates/hmmsearch_output_${item}.out 
        ./intermediates/characterized.hmm 
        ${min_coverage} 
        ./intermediates/removed_poor_coverage_${item}.txt
      deps:
        - ./intermediates/hmmsearch_output_${item}.out
        - ./intermediates/characterized.hmm
        - ./scripts/remove_poor_coverage.py
      params: 
        - min_coverage
        - db_location
      outs: 
        - ./intermediates/removed_poor_coverage_${item}.txt

  retrieve_sequences:
    foreach: ${target_dbs.target_dbs}
    do:
      cmd: >
        python ./scripts/retrieve_sequences.py 
        ./intermediates/hmmsearch_output_${item}.out 
        ./intermediates/removed_starting_hits_${item}.txt 
        ./intermediates/removed_poor_coverage_${item}.txt 
        ${db_location}/${item}
        ./intermediates/retrieved_sequences_${item}.fasta
      deps:
        - ./intermediates/hmmsearch_output_${item}.out
        - ./intermediates/removed_starting_hits_${item}.txt
        - ./intermediates/removed_poor_coverage_${item}.txt
        - ./scripts/retrieve_sequences.py
      outs: 
        - ./intermediates/retrieved_sequences_${item}.fasta
      params: 
        - db_location

  combine_fasta:
    cmd: >
      python ./scripts/combine_fasta.py
      ./outputs/combined_hits.fasta
      $(for db in ${target_dbs}; do echo ./intermediates/retrieved_sequences_$db.fasta; done)
    deps:
      - ./scripts/combine_fasta.py
    outs:
      - ./outputs/combined_hits.fasta
    params:
      - target_dbs

  hmmalign:
  # add the original alignment to the hmm alignment
    cmd: >
      hmmalign 
      --trim 
      --amino 
      --outformat a2m 
      ./intermediates/characterized.hmm 
      ./outputs/combined_hits.fasta
      >> ./outputs/combined_hits_aligned.a2m
    deps:
      - ${input_alignment}
      - ./intermediates/characterized.hmm
      - ./outputs/combined_hits.fasta
    outs: 
      - ./outputs/combined_hits_aligned.a2m

  cluster_hits:
    cmd: >
      mmseqs easy-cluster 
      ./outputs/combined_hits.fasta 
      ./outputs/clustered_sequences 
      ./tmp 
      --min-seq-id ${mmseqs_min_seq_id} 
      -c ${mmseqs_coverage} 
      --cov-mode 0 
      && rm -rf ./tmp
    deps:
      - ./outputs/combined_hits.fasta
    params:
      - mmseqs_min_seq_id
      - mmseqs_coverage
    outs:
      - ./outputs/clustered_sequences_cluster.tsv
      - ./outputs/clustered_sequences_rep_seq.fasta
      - ./outputs/clustered_sequences_all_seqs.fasta

  compare_hits_to_input_seqs:
    cmd: >
      python ./scripts/compute_pid_coverage.py
      ${input_alignment}
      ./outputs/combined_hits.fasta
      ./outputs/hit_comparisons.tsv
    deps:
      - ${input_alignment}
      - ./outputs/combined_hits.fasta
      - ./scripts/compute_pid_coverage.py
    outs:
      - ./outputs/hit_comparisons.tsv

  # predict enzyme temperature
  # NOTE that this needs a different environment activated:
  # https://github.com/EvanKomp/enzyme_thermal_benchmark
  # follow the setup there.
  predict_topt:
    cmd: >
      python ./scripts/predict_topt.py
      ./outputs/combined_hits.fasta
      ./outputs/topt_predictions.tsv
    deps:
      - ./outputs/combined_hits.fasta
      - ./scripts/predict_topt.py
    outs:
      - ./outputs/topt_predictions.csv
    params:
      - max_seq_len
